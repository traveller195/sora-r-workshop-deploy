% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sora_geocoder.R
\name{sora_geocoder}
\alias{sora_geocoder}
\title{Geocoder which retuns coordinates to a given address.}
\usage{
sora_geocoder(input, verbose = NULL, api_key = NULL)
}
\arguments{
\item{input}{List with the information for:
\code{ID}, \code{street}, \verb{house number}, \verb{zip code} and \code{place}.}

\item{verbose}{A logical, character string or \code{NULL} that specifies if
and how to produce messages. If \code{FALSE}, suppresses all informative
messages. If a path is provided, stores all messages in the specified file.
If \code{NULL}, verbosity depends on \code{getOption("sora_verbose")}. Use
the latter to set verbosity across the entire session, e.g. to suppress
messages from all package functions. Defaults to \code{NULL} and
\code{getOption("sora_verbose")} defaults to \code{TRUE}, i.e., display
messages where reasonable.}

\item{api_key}{A valid SoRa API key. Required to communicate with the SoRa
API. You can request a key by filling out
\href{https://sora.gesis.org/unofficial/sora-user-mod/users/request-api-key}{this form}
on the SoRa website.

If \code{NULL}, reads a key from the \code{SORA_API_KEY}
environment variable.

If "ask" (and the session is interactive), opens a masked prompt where you
can enter your key. The entered key is persistently stored in an environment
variable and can be used across sessions.

Please note that you are advised not to enter your key directly using this
argument. If you do, please make sure that you do not publish any code files
containing the key in plain text. Failure to do so can compromise your
access to the SoRa API.}
}
\value{
A tibble or data.frame with the \code{id}, \code{coordinates (components)}
and a \code{score} for quality (range from 0 to 1).
}
\description{
Send a request with a list of addresses to the SoRa geocoder function.
SoRa will forward the request to \code{BKG} and will return the coordinates.
}
\examples{
\dontshow{if (isTRUE(Sys.getenv("SORA_RUN_EXAMPLES")) && sora_available()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
addresses <- data.frame(
"id" = c("1", "2"),
"street" = c("Einsteinufer", "An d. Wuhlheide"),
"house_number" = c("69", "263"),
"zip_code" = c("10587", "12555"),
"place" = c("Berlin", "Berlin")
)
result <- sora_geocoder(input = addresses)
\dontshow{\}) # examplesIf}
}
